package ch.ebynaqon.aoc.aoc23;

import ch.ebynaqon.aoc.aoc23.helper.TestHelper;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.*;

class CosmicExpansionTest {
    @Test
    void expand() {
        var input = """
                ...#......
                .......#..
                #.........
                ..........
                ......#...
                .#........
                .........#
                ..........
                .......#..
                #...#.....
                """.trim();

        var actual = CosmicExpansion.expand(input);

        assertThat(actual).isEqualTo("""
                ....#........
                .........#...
                #............
                .............
                .............
                ........#....
                .#...........
                ............#
                .............
                .............
                .........#...
                #....#.......
                """.trim());
    }

    @Test
    void shortestDistanceSimpleExample() {
        var input = """
                .#.....
                .......
                .......
                .......
                .......
                .....#.
                """.trim();

        var actual = CosmicExpansion.shortestPaths(input);

        assertThat(actual).isEqualTo(9);
    }

    @Test
    void shortestDistanceMoreComplicatedExample() {
        var input = """
                ....#........
                .........#...
                #............
                .............
                .............
                ........#....
                .#...........
                ............#
                .............
                .............
                .........#...
                #....#.......
                """.trim();

        var actual = CosmicExpansion.shortestPaths(input);

        assertThat(actual).isEqualTo(374);
    }

    @Test
    void shortestDistanceForPuzzle1() {
        var input = TestHelper.readInput("/day11-cosmic-expansion.txt").trim();

        var actual = CosmicExpansion.shortestPaths(CosmicExpansion.expand(input));

        assertThat(actual).isEqualTo(9805264);
    }

    @Test
    void shortestDistanceForPuzzle1WithAlgorithmForLargeExpansion() {
        var input = TestHelper.readInput("/day11-cosmic-expansion.txt").trim();

        var actual = CosmicExpansion.sumOfShortestPaths(CosmicExpansion.galaxyPositionsInExpandedUniverse(input, 2));

        assertThat(actual).isEqualTo(9805264);
    }

    @Test
    void shortestDistanceForPuzzle2WithAlgorithmForLargeExpansion() {
        var input = TestHelper.readInput("/day11-cosmic-expansion.txt").trim();

        var actual = CosmicExpansion.sumOfShortestPaths(CosmicExpansion.galaxyPositionsInExpandedUniverse(input, 1_000_000));

        assertThat(actual).isEqualTo(779032247216L);
    }

    @Test
    void shortestDistanceForExampleWithExpansionOf10() {
        var input = """
                ...#......
                .......#..
                #.........
                ..........
                ......#...
                .#........
                .........#
                ..........
                .......#..
                #...#.....
                """.trim();

        var actual = CosmicExpansion.sumOfShortestPaths(CosmicExpansion.galaxyPositionsInExpandedUniverse(input, 10));

        assertThat(actual).isEqualTo(1030);
    }
}
